{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/Layout.js","webpack:///./src/assets/favicon.ico","webpack:///./src/components/Hero.js","webpack:///./src/components/PostList.js"],"names":["IndexPage","props","postsData","data","allMarkdownRemark","edges","filter","_ref","node","Date","frontmatter","date","map","edge","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","_components_Hero__WEBPACK_IMPORTED_MODULE_4__","title","subtitle","className","_components_PostList__WEBPACK_IMPORTED_MODULE_5__","pageQuery","Header","toggled","handleToggled","react__WEBPACK_IMPORTED_MODULE_3___default","role","aria-label","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","style","fontWeight","onClick","href","Footer","getFullYear","Layout","state","_this","setState","render","children","this","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","charSet","rel","favicon","Component","propTypes","PropTypes","bool","func","element","isRequired","module","exports","__webpack_require__","p","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","Hero","string","PostList","react__WEBPACK_IMPORTED_MODULE_1___default","post","key","id","marginTop","gatsby_link__WEBPACK_IMPORTED_MODULE_3___default","path","category","excerpt","arrayOf","shape","html","tags","array"],"mappings":"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","file":"component---src-pages-index-js-7499228672dfd40bc9ad.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport Hero from '../components/Hero'\nimport PostList from '../components/PostList'\n\nexport default function IndexPage(props) {\n  const edges = props.data.allMarkdownRemark.edges\n  const postsData = edges\n    .filter(({ node }) => new Date(node.frontmatter.date) < new Date()) // hide reserved posts\n    .map(edge => edge.node)\n\n  return (\n    <Layout>\n      <div>\n        <Hero\n          title=\"Welcome to my writing playground\"\n          subtitle=\"about Translation, Ruby, Javascript, Practical Dev etc.\"\n        />\n\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column is-10-mobile is-offset-1-mobile is-10-tablet is-offset-1-tablet\">\n              <PostList postsData={postsData} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          id\n          frontmatter {\n            title\n            category\n            date(formatString: \"YYYY/MM/DD\")\n            path\n          }\n        }\n      }\n    }\n  }\n`\n","import Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Link } from 'gatsby'\n\nimport 'bulma'\nimport '@mdi/font/scss/materialdesignicons.scss'\nimport 'prismjs/themes/prism-tomorrow.css'\nimport './Layout.style.scss'\n\nimport favicon from '../assets/favicon.ico'\n\nconst Header = ({ toggled, handleToggled }) => (\n  <nav\n    className=\"navbar is-info\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"navbar-brand\">\n      <Link\n        to=\"/\"\n        className=\"navbar-item navbar-title\"\n        style={{ fontWeight: 'bold' }}\n      >\n        Rinae's playground\n      </Link>\n\n      <div\n        className={toggled ? 'navbar-burger is-active' : 'navbar-burger'}\n        onClick={() => handleToggled()}\n      >\n        <span />\n        <span />\n        <span />\n      </div>\n    </div>\n\n    <div className={toggled ? 'navbar-menu is-active' : 'navbar-menu'}>\n      <div className=\"navbar-end\">\n        <Link className=\"navbar-item\" to=\"/\">\n          Posts\n        </Link>\n        <Link className=\"navbar-item\" to=\"/tags\">\n          Tags\n        </Link>\n        <a className=\"navbar-item\" href=\"/rss.xml\">\n          RSS Feed\n        </a>\n      </div>\n    </div>\n  </nav>\n)\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <div className=\"container\">\n      <div className=\"content has-text-centered\">\n        <p>\n          All content copyright rinae © {new Date().getFullYear()} • All rights\n          reserved.\n        </p>\n        <p>\n          Powered by <a href=\"https://www.gatsbyjs.org\">Gatsby.js</a> and{' '}\n          <a href=\"https://bulma.io\">Bulma</a>\n        </p>\n      </div>\n    </div>\n  </footer>\n)\n\nclass Layout extends Component {\n  state = {\n    toggled: false,\n  }\n\n  handleToggled = () => {\n    this.setState({ toggled: !this.state.toggled })\n  }\n\n  render() {\n    const { children } = this.props\n\n    return (\n      <div>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Rinae's playground</title>\n          <link rel=\"shortcut icon\" href={favicon} />\n        </Helmet>\n        <Header\n          toggled={this.state.toggled}\n          handleToggled={this.handleToggled}\n        />\n        <div>{children}</div>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nHeader.propTypes = {\n  toggled: PropTypes.bool,\n  handleToggled: PropTypes.func,\n}\n\nLayout.propTypes = {\n  children: PropTypes.element.isRequired,\n}\n\nexport default Layout\n","module.exports = __webpack_public_path__ + \"static/favicon-8f04d8a8472e0545dfb3bfc1f40ebc96.ico\";","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Hero = ({ title, subtitle }) => (\n  <section className=\"hero is-light\">\n    <div className=\"hero-body\">\n      <div className=\"container\">\n        <h1 className=\"title\">{title}</h1>\n        <h2 className=\"subtitle\">{subtitle}</h2>\n      </div>\n    </div>\n  </section>\n)\n\nHero.propTypes = {\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n}\n\nexport default Hero\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Link from 'gatsby-link'\n\nconst PostList = ({ postsData }) => (\n  <div>\n    {postsData.map(post => (\n      <div key={post.id} className=\"box\" style={{ marginTop: '1rem' }}>\n        <p>\n          <Link to={post.frontmatter.path}>\n            <strong>{post.frontmatter.title}</strong>\n          </Link>\n          {' - '}\n          <small>{post.frontmatter.date}</small>{' '}\n          <span className=\"tag is-info\">{post.frontmatter.category}</span>\n        </p>\n        <p>{post.excerpt}</p>\n      </div>\n    ))}\n  </div>\n)\n\nPostList.propTypes = {\n  postsData: PropTypes.arrayOf(\n    PropTypes.shape({\n      excerpt: PropTypes.string,\n      html: PropTypes.string,\n      id: PropTypes.string,\n      frontmatter: PropTypes.shape({\n        date: PropTypes.string,\n        path: PropTypes.string,\n        tags: PropTypes.array,\n        title: PropTypes.string,\n      }),\n    })\n  ),\n}\n\nexport default PostList\n"],"sourceRoot":""}