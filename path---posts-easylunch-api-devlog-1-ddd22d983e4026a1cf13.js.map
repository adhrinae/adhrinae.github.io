{"version":3,"sources":["webpack:///path---posts-easylunch-api-devlog-1-ddd22d983e4026a1cf13.js","webpack:///./.cache/json/posts-easylunch-api-devlog-1.json"],"names":["webpackJsonp","423","module","exports","data","markdownRemark","html","frontmatter","date","path","title","tags","site","siteMetadata","siteUrl","disqusShortUrl","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA;AAAy/jCC,aAAkoCC,KAAA,aAAAC,KAAA,gCAAAC,MAAA,2BAAAC,MAAA,WAAgHC,MAASC,cAAgBC,QAAA,6BAAAC,eAAA,mBAA0EC","file":"path---posts-easylunch-api-devlog-1-ddd22d983e4026a1cf13.js","sourcesContent":["webpackJsonp([212315477619989],{\n\n/***/ 423:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2 id=\\\"clone-repository\\\"><a href=\\\"#clone-repository\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Clone repository</h2>\\n<p>금방 하지 못했던 easylunch api 서버 프로젝트를 작성하기 시작했다.\\n프로젝트 생성과 Gem 세팅 등은 이미 되어 있어서 github에 있는 레포를 클론하였고\\nIssue #10 으로 분류되어 있어서 <code class=\\\"language-text\\\">ISS#10</code> 브랜치를 생성하였다.\\n이번에는 Bitbucket에서 작성했던 프로젝트와 다르게 development 브랜치를 두지 않고 이슈 브랜치에서 바로 master로 합치는 방식으로 진행하는가 보다.</p>\\n<h2 id=\\\"모델-작성\\\"><a href=\\\"#%EB%AA%A8%EB%8D%B8-%EC%9E%91%EC%84%B1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>모델 작성</h2>\\n<p>먼저 슬랙에 올라와 있던 모델 도면을 참고하여 모델을 작성하였다.\\n처음엔 별 생각 없이 모델 생성하면서 string이나 integer만 구분하여 각 컬럼을 입력하고 있었다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">rails g model MealLog user_id:integer menu_name:string price:integer meal_time:datetime</code></pre>\\n      </div>\\n<p>이렇게 테이블을 작성하고 나서 모델에서 따로 <code class=\\\"language-text\\\">belongs_to</code> 와 <code class=\\\"language-text\\\">has_many</code> 를 입력해줄 생각이었다.\\n그러다 저번에 다른 튜토리얼에서 우연히 본 references를 이용할 생각이 뒤늦게 들어서 마이그레이션 파일을 변경해 주기로 했다.</p>\\n<p>마이그레이션 시 타입을 references로 지정해주면 model<em>id 생성과 함께 관계 설정을 해주는 코드(`belongs</em>to<code class=\\\"language-text\\\">/</code>has_many`)가 자동으로 삽입된다.\\n다만 이미 마이그레이션 파일이 작성된 뒤였기 때문에(실행은 하지 않음) 다음과 같이 마이그레이션 파일을 변경해주었다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ruby\\\"><code class=\\\"language-ruby\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">CreateMealLogs</span> <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token constant\\\">ActiveRecord</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token constant\\\">Migration</span>\\n  <span class=\\\"token keyword\\\">def</span> change\\n    create_table <span class=\\\"token symbol\\\">:meal_logs</span> <span class=\\\"token keyword\\\">do</span> <span class=\\\"token operator\\\">|</span>t<span class=\\\"token operator\\\">|</span>\\n      t<span class=\\\"token punctuation\\\">.</span>references <span class=\\\"token symbol\\\">:user</span>\\n      t<span class=\\\"token punctuation\\\">.</span>string <span class=\\\"token symbol\\\">:menu_name</span>\\n      t<span class=\\\"token punctuation\\\">.</span>integer <span class=\\\"token symbol\\\">:price</span>\\n      t<span class=\\\"token punctuation\\\">.</span>datetime <span class=\\\"token symbol\\\">:meal_time</span>\\n\\n      t<span class=\\\"token punctuation\\\">.</span>timestamps null<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">false</span>\\n    <span class=\\\"token keyword\\\">end</span>\\n    add_index <span class=\\\"token symbol\\\">:meal_logs</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token symbol\\\">:user_id</span>\\n  <span class=\\\"token keyword\\\">end</span>\\n<span class=\\\"token keyword\\\">end</span>\\n</code></pre>\\n      </div>\\n<p>그리고 직접 관계를 맺어주는 것과 별개로 CodeTable때문에 외부 키를 입력해줄 필요가 있었다.\\n외부 키를 추가할 때는 마이그레이션 파일에 add<em>foreign</em>key 메서드를 사용해야 한다. 이 경우엔 미리 생성된 컬럼을 지정해주고 싶었기 때문에 다음과 같이 삽입해야 했다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">add_foreign_key :meal_meet_ups, :users, column: :admin_id</code></pre>\\n      </div>\\n<p>외부 키를 지정해주는 마이그레이션 파일은 다음과 같이 작성되었다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ruby\\\"><code class=\\\"language-ruby\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">CreateMealMeetUps</span> <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token constant\\\">ActiveRecord</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token constant\\\">Migration</span>\\n  <span class=\\\"token keyword\\\">def</span> change\\n    create_table <span class=\\\"token symbol\\\">:meal_meet_ups</span> <span class=\\\"token keyword\\\">do</span> <span class=\\\"token operator\\\">|</span>t<span class=\\\"token operator\\\">|</span>\\n      t<span class=\\\"token punctuation\\\">.</span>integer <span class=\\\"token symbol\\\">:total_price</span>\\n      t<span class=\\\"token punctuation\\\">.</span>integer <span class=\\\"token symbol\\\">:messenger_code</span>\\n      t<span class=\\\"token punctuation\\\">.</span>string <span class=\\\"token symbol\\\">:messenger_room_id</span>\\n      t<span class=\\\"token punctuation\\\">.</span>integer <span class=\\\"token symbol\\\">:admin_id</span>\\n      t<span class=\\\"token punctuation\\\">.</span>integer <span class=\\\"token symbol\\\">:meetup_status</span>\\n\\n      t<span class=\\\"token punctuation\\\">.</span>timestamps null<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">false</span>\\n    <span class=\\\"token keyword\\\">end</span>\\n    add_foreign_key <span class=\\\"token symbol\\\">:meal_meet_ups</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token symbol\\\">:users</span><span class=\\\"token punctuation\\\">,</span> column<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token symbol\\\">:admin_id</span>\\n    add_foreign_key <span class=\\\"token symbol\\\">:meal_meet_ups</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token symbol\\\">:code_tables</span><span class=\\\"token punctuation\\\">,</span> column<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token symbol\\\">:messenger_code</span>\\n    add_foreign_key <span class=\\\"token symbol\\\">:meal_meet_ups</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token symbol\\\">:code_tables</span><span class=\\\"token punctuation\\\">,</span> column<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token symbol\\\">:meetup_status</span>\\n  <span class=\\\"token keyword\\\">end</span>\\n<span class=\\\"token keyword\\\">end</span>\\n</code></pre>\\n      </div>\\n<p>다음은 MealMeetUp 생성과 변경을 처리하는 api 컨트롤러를 작성할 차례이다.</p>\\n<h2 id=\\\"컨트롤러-작성\\\"><a href=\\\"#%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC-%EC%9E%91%EC%84%B1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>컨트롤러 작성</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">rails g controller MealMeetUp create update</code></pre>\\n      </div>\\n<p>현재 시점에서 첫 번째로 구현하려는 기능은 MealMeetUp api이다. 새 MealMeetUp 생성과 수정을 구현할 예정인데\\njson으로만 데이터를 주고받을 예정이니 <code class=\\\"language-text\\\">routes.rb</code>에 디폴트 포맷을 지정해주기로 했다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\"># routes.rb\\npost &#39;meal_meet_ups&#39;  =&gt; &#39;meal_meet_up#create&#39;, defaults: { format: &#39;json&#39; }\\npatch &#39;meal_meet_ups&#39; =&gt; &#39;meal_meet_up#update&#39;, defaults: { format: &#39;json&#39; }</code></pre>\\n      </div>\\n<p>그 다음에는 <a href=\\\"https://blog.8thlight.com/will-warner/2014/04/05/strong-parameters-in-rails.html\\\">Strong parameter</a>를 지정하기 위해 meetup_params 메서드를 작성했다.</p>\\n<p>입력받을 JSON은 다음과 같으므로 data 아래에 있는 나머지 키들을 전부 받을수 있는 값으로 설정해두었다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"data\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"email\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"abc@example.com\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"messenger\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"slack\\\"</span><span class=\\\"token punctuation\\\">,</span> // 약속된 code\\n        <span class=\\\"token property\\\">\\\"messenger_room_id\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">1459349928</span><span class=\\\"token punctuation\\\">,</span> // optional<span class=\\\"token punctuation\\\">,</span> 값을 얻을 수 없는 특정 메신저의 경우(ex- 카톡<span class=\\\"token punctuation\\\">)</span> api 서버에서 유저의 아이디 정보로 검색\\n        <span class=\\\"token property\\\">\\\"total_price\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">50000</span><span class=\\\"token punctuation\\\">,</span> // optional\\n        <span class=\\\"token property\\\">\\\"status\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"paying\\\"</span> // optional<span class=\\\"token punctuation\\\">,</span> 값이 주어지지 않을 경우 state machine으로 작동\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h2 id=\\\"mealmeetup-create\\\"><a href=\\\"#mealmeetup-create\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>MealMeetUp Create</h2>\\n<p>이 JSON을 가지고(예로 작성된 JSON은 정보 변경시에 받는 것이고 생성 시에는 <code class=\\\"language-text\\\">total_price</code>와 <code class=\\\"language-text\\\">status</code>는 받지 않는다. 대신 <code class=\\\"language-text\\\">messenger_user_id</code>를 받는다) <code class=\\\"language-text\\\">create</code> 메서드가 작동한다면 어떤 과정으로 구동하게 될까 생각해 보았다.</p>\\n<ol>\\n<li>meetup_params를 한번 거쳐서 허가된 매개변수만 받는다.</li>\\n<li>\\n<p>받은 변수들의 유효성을 검사한다</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">email</code>, <code class=\\\"language-text\\\">messenger_user_id</code> 같은 인증 정보가 누락된 경우: 401에러</li>\\n<li><code class=\\\"language-text\\\">messenger</code>, <code class=\\\"language-text\\\">messenger_room_id</code> 같이 방을 생성하기 위한 정보가 충분하지 않아 생성이 불가능할 때: 400에러</li>\\n</ul>\\n</li>\\n<li>\\n<p>유효성을 통과한 경우 먼저 User 객체 생성 + messenger_code 가져오기</p>\\n<ul>\\n<li>messenger 종류로 CodeTable에서 맞는 <code class=\\\"language-text\\\">messenger_code</code> 가져오기 (이 시점에서 seed 파일로 코드테이블을 작성해놓아야 할 필요성을 느꼈다. 더군다나 이런식으로 찾을거면 코드테이블을 작성하는 의미가 있나?)</li>\\n<li>email 주소로 새로운 유저 생성.</li>\\n</ul>\\n</li>\\n<li>\\n<p>MealMeetUp 생성</p>\\n<ul>\\n<li>앞선 과정에서 가져온 <code class=\\\"language-text\\\">messenger_code</code></li>\\n<li><code class=\\\"language-text\\\">messenger_room_id</code></li>\\n<li>앞서 생성된 user의 id를 <code class=\\\"language-text\\\">admin_id</code>로 지정</li>\\n<li>status는 null로 두고, null인 경우는 최초 생성인 것으로 간주하도록 하려고 했으나, 아무래도 \\\"​created\\\"라는 상태를 지정해 두는 것이 나아 보인다.</li>\\n</ul>\\n</li>\\n</ol>\\n<p>CodeTable을 작성하면서 한 가지 실수한 점이 있는데, 컬럼명에 'type'이라는 이름을 쓰면 레일즈에 기본적으로 정의되어있는 type과 충돌이 난다. 그래서 code_type으로 컬럼명을 변경하였다.</p>\\n<p>각각 코드가 무엇을 의미하는지는 code_table.rb에 주석으로 달기로 하였다.</p>\\n<p>한창 날코딩으로 작업을 하고, 얼렁뚱땅 create메서드를 작동시키는 것 까지는 성공했는데 돌이켜보니 DB 관계 설정을 하나도 해두지 않았다.\\n생성과 구상까지만 하고 몇일을 보내버려서 그런지 생각보다 머리에 잘 들어오지 않아 애먹고 있다.</p>\\n<p>매번 단순히 <code class=\\\"language-text\\\">has_many</code>, <code class=\\\"language-text\\\">belongs_to</code>정도만 남발하다가 본격적으로 직접 외부키로 관계를 맺어주려니 어렵게 느껴졌다. 이리저리 소스를 찾아서 구현해본 결과 이런 느낌으로 나온다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ruby\\\"><code class=\\\"language-ruby\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">MealMeetUp</span> <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token constant\\\">ActiveRecord</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token constant\\\">Base</span>\\n  has_many <span class=\\\"token symbol\\\">:meal_meet_up_logs</span>\\n  has_many <span class=\\\"token symbol\\\">:meal_meet_up_tasks</span>\\n  belongs_to <span class=\\\"token symbol\\\">:admin</span><span class=\\\"token punctuation\\\">,</span> class_name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'User'</span><span class=\\\"token punctuation\\\">,</span> foreign_key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'admin_id'</span>\\n  belongs_to <span class=\\\"token symbol\\\">:messenger</span><span class=\\\"token punctuation\\\">,</span> class_name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'CodeTable'</span><span class=\\\"token punctuation\\\">,</span> foreign_key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'messenger_code'</span>\\n<span class=\\\"token keyword\\\">end</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">User</span> <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token constant\\\">ActiveRecord</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token constant\\\">Base</span>\\n  has_many <span class=\\\"token symbol\\\">:meal_meet_ups</span><span class=\\\"token punctuation\\\">,</span> foreign_key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'admin_id'</span>\\n  has_many <span class=\\\"token symbol\\\">:meal_logs</span>\\n  has_many <span class=\\\"token symbol\\\">:user_messengers</span>\\n<span class=\\\"token keyword\\\">end</span>\\n</code></pre>\\n      </div>\\n<p>어느 클래스에 있는 값을 가져올지 <code class=\\\"language-text\\\">class_name</code>으로 지정해주고, 실제 어떤 메서드를 입력해서 가져올지(<code class=\\\"language-text\\\">:admin</code>), 어떤 외부키를 지정해 두었는지 등으로 설정할 수 있다.</p>\\n<p><code class=\\\"language-text\\\">create</code>메서드가 작동 자체는 잘 하는 것 같은데 루보캅에서 메서드가 너무 길다고 하니까 조금 아쉽게 느껴진다. 더 줄일 부분이 분명히 있는데 어느 부분을 손대야할지 잘 감이 안잡히는 느낌이 든다. 기준이 10줄인데 14줄로 작성되어 있으니..</p>\\n<p>인증 정보의 유효성 고려하다보니 깜빡한 것이, 이메일 유효성을 고려하지 않았다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">VALID_EMAIL_ADDRESS = /\\\\A[\\\\w+\\\\-.]+@[a-z\\\\d\\\\-.]+\\\\.[a-z]+\\\\z/i</code></pre>\\n      </div>\\n<p>M.Hartl의 튜토리얼에서 가져온 이 정규표현식으로 메서드를 만들어서 검증하기로 했다.</p>\\n<h2 id=\\\"mealmeetup-update\\\"><a href=\\\"#mealmeetup-update\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>MealMeetUp Update</h2>\\n<p>업데이트는 두가지 속성이 더 추가되는데, <code class=\\\"language-text\\\">total_price</code>와 <code class=\\\"language-text\\\">status</code>이다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"data\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"email\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"abc@example.com\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"messenger\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"slack\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"messenger_room_id\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">1459349928</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"total_price\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">50000</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"status\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"paying\\\"</span> // 현재까지 완료된 최종 상태\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>설마 했던 문제지만, 이번에도 create를 만들면서 별달리 다음 문제에 대해 고려를 안하다 보니까 리턴용 JSON 생성이 곤란하게 되었다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ruby\\\"><code class=\\\"language-ruby\\\"><span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">meal_meet_up_json</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">{</span> data<span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token punctuation\\\">{</span> email<span class=\\\"token punctuation\\\">:</span> data<span class=\\\"token punctuation\\\">.</span>admin<span class=\\\"token punctuation\\\">.</span>email<span class=\\\"token punctuation\\\">,</span>\\n        messenger<span class=\\\"token punctuation\\\">:</span> data<span class=\\\"token punctuation\\\">.</span>messenger<span class=\\\"token punctuation\\\">,</span>\\n        messenger_room_id<span class=\\\"token punctuation\\\">:</span> data<span class=\\\"token punctuation\\\">.</span>messenger_room_id <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">end</span>\\n</code></pre>\\n      </div>\\n<p>그래서 생각하건데 아예 모든 값이 다 들어가도록 json을 만들고,  create메서드에서 리턴할때만 특정 키를 뺀 채로 만들면 될 거라는 생각이 든다.</p>\\n<p>공통적입 부분을 생각해보니, MealMeetUp 객체에 저장을 하기위해 추가적으로 들어가는 정보들을 조회하는 부분이 크게 중복된다. 그래서 이 기능도 나누어서 작성하였다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ruby\\\"><code class=\\\"language-ruby\\\"><span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">get_more_info</span><span class=\\\"token punctuation\\\">(</span>params<span class=\\\"token punctuation\\\">)</span>\\n    status <span class=\\\"token operator\\\">=</span> params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:status</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>empty<span class=\\\"token operator\\\">?</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">'created'</span> <span class=\\\"token punctuation\\\">:</span> params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:status</span><span class=\\\"token punctuation\\\">]</span>\\n    messenger_code <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">CodeTable</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find_messenger</span><span class=\\\"token punctuation\\\">(</span>params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:messenger</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>id\\n    status_code <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">CodeTable</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find_status</span><span class=\\\"token punctuation\\\">(</span>status<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>id\\n\\n    user <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">if</span> status <span class=\\\"token operator\\\">==</span> <span class=\\\"token string\\\">'created'</span>\\n            <span class=\\\"token constant\\\">User</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span>email<span class=\\\"token punctuation\\\">:</span> params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:email</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token keyword\\\">else</span>\\n            <span class=\\\"token constant\\\">User</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find_by</span><span class=\\\"token punctuation\\\">(</span>email<span class=\\\"token punctuation\\\">:</span> params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:email</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token keyword\\\">end</span>\\n\\n    additional_data <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> admin_id<span class=\\\"token punctuation\\\">:</span> user<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span> messenger_code<span class=\\\"token punctuation\\\">:</span> messenger_code<span class=\\\"token punctuation\\\">,</span> status_code<span class=\\\"token punctuation\\\">:</span> status_code <span class=\\\"token punctuation\\\">}</span>\\n\\n    params<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">merge</span><span class=\\\"token punctuation\\\">(</span>additional_data<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">end</span>\\n</code></pre>\\n      </div>\\n<p>막상 이것도 더 쪼갤 수 있을 테지만.. status<em>code, messenger</em>code, admin_id 삽입까지 처리하였다.\\n마지막 줄에 최종적으로 원하는 데이터를 출력하는 부분이 애매한데, MeetUp 객체 생성/수정에 필요 없는 정보들이 너무 많았다. 그래서 조금 수정을 가했다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">params.merge(additional_data).reject { |key| [&#39;email&#39;, &#39;messenger&#39;, &#39;status&#39;, &#39;messenger_user_id&#39;].include?(key) }</code></pre>\\n      </div>\\n<p>거의 다 된거 같은게 갈수록 태산처럼 보인다. 이번에는 messenger<em>user</em>id가 UserMessenger 모델에 들어가야하는 값이라는걸 깨달았다. 당장 어디다 넣어야 할지도 모르겠는데.. 일단 <code class=\\\"language-text\\\">get_more_info</code> 메서드를 조금 수정하여 처음 생성하는 MealMeetUp일 경우 새로운 UserMessenger 객체를 생성하는 것 까지 진행했다.</p>\\n<p>지금까지 작업하여 돌아가기는 하지만 영 못마땅한 부분이 많다. 특히 반복적인 부분과 매끄럽게 보이지 않는 부분들이 너무 많은데, 본격적으로 수정을 하면 어디부터 손을 대야할지 해봐야 알 것이다. (루보캅 테스트 통과 못한 부분이 무려 22개)</p>\\n<p>루보캅에서 주로 걸리는 문제는 ABC(Assignment Branch Condition) 사이즈가 너무 크다는 것이다. 한번에 이해는 하기 힘들었지만 변수를 많이 선언하고, 조건을 많이 걸고, 얽힌 메서드가 많을 수록 점수가 올라가는 기분이 든다.</p>\\n<p>당장 위에 작성한 <code class=\\\"language-text\\\">get_more_info</code> 메서드만 해도 기준을 1.5배 초과하고 있다. 당장 저 메서드를 수정하려면 어떻게 해야할까? 저 메서드가 어떤 기능을 수행하는지 나누어 보자.</p>\\n<ul>\\n<li>status 패러미터를 가져와서 패러미터가 없으면 'created'를 부여한다.</li>\\n<li>messenger_code를 가져온다.</li>\\n<li>status_code를 가져온다.</li>\\n<li>status가 'created'이면 (즉 처음 MealMeetUp이 생성되는거면) 새로운 유저와 유저메신저 객체를 생성한다.</li>\\n<li>생성된 유저의 Id와 messenger<em>code, status</em>code를 새로운 해시(addtional_data)로 만든다.</li>\\n<li>기존의 패러미터에 addtional_data를 합친다.</li>\\n</ul>\\n<p>기능별로 하나하나 나눌 순 있다. 점점 메서드의 산이 되어가는 기분이지만..\\n먼저 걸리는 점은 새로운 유저 생성, 그다음은 스테이터스 패러미터, 마지막은 추가 해시 생성이다.\\n새로운 유저 생성 부분부터 분리해보자.</p>\\n<p>무작정 분리한건 좋은데 이 메서드들을 어떻게 합쳐야 할지 감이 오지 않는다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ruby\\\"><code class=\\\"language-ruby\\\"><span class=\\\"token keyword\\\">def</span> fetch_params\\n    <span class=\\\"token variable\\\">@params</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">get_more_info</span><span class=\\\"token punctuation\\\">(</span>meetup_params<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">end</span>\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">load_status</span><span class=\\\"token punctuation\\\">(</span>status<span class=\\\"token punctuation\\\">)</span>\\n    status<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">nil</span><span class=\\\"token operator\\\">?</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">'created'</span> <span class=\\\"token punctuation\\\">:</span> status\\n<span class=\\\"token keyword\\\">end</span>\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">load_status_code</span><span class=\\\"token punctuation\\\">(</span>status<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token variable\\\">@status_code</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">CodeTable</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find_status</span><span class=\\\"token punctuation\\\">(</span>status<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>id\\n<span class=\\\"token keyword\\\">end</span>\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">load_messenger_code</span><span class=\\\"token punctuation\\\">(</span>messenger<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token variable\\\">@messenger_code</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">CodeTable</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find_messenger</span><span class=\\\"token punctuation\\\">(</span>messenger<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>id\\n<span class=\\\"token keyword\\\">end</span>\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">load_user</span><span class=\\\"token punctuation\\\">(</span>status<span class=\\\"token punctuation\\\">,</span> params<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">if</span> status <span class=\\\"token operator\\\">==</span> <span class=\\\"token string\\\">'created'</span>\\n    <span class=\\\"token variable\\\">@user</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">User</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span>email<span class=\\\"token punctuation\\\">:</span> params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:email</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token constant\\\">UserMessenger</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span>user_id<span class=\\\"token punctuation\\\">:</span> user<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span>\\n                            messenger_user_id<span class=\\\"token punctuation\\\">:</span> params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:messenger_user_id</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n                            messenger_code<span class=\\\"token punctuation\\\">:</span> messenger_code<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">else</span>\\n    <span class=\\\"token variable\\\">@user</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">User</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find_by</span><span class=\\\"token punctuation\\\">(</span>email<span class=\\\"token punctuation\\\">:</span> params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:email</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">end</span>\\n<span class=\\\"token keyword\\\">end</span>\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">get_more_info</span><span class=\\\"token punctuation\\\">(</span>user<span class=\\\"token punctuation\\\">,</span> messenger_code<span class=\\\"token punctuation\\\">,</span> status_code<span class=\\\"token punctuation\\\">,</span> params<span class=\\\"token punctuation\\\">)</span>\\n    additional_data <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> admin_id<span class=\\\"token punctuation\\\">:</span> user<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span>\\n                        messenger_code<span class=\\\"token punctuation\\\">:</span> messenger_code<span class=\\\"token punctuation\\\">,</span>\\n                        meetup_status<span class=\\\"token punctuation\\\">:</span> status_code <span class=\\\"token punctuation\\\">}</span>\\n\\n    params<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">merge</span><span class=\\\"token punctuation\\\">(</span>additional_data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>reject <span class=\\\"token keyword\\\">do</span> <span class=\\\"token operator\\\">|</span>key<span class=\\\"token operator\\\">|</span>\\n    <span class=\\\"token string\\\">%w(email messenger status messenger_user_id)</span><span class=\\\"token punctuation\\\">.</span>include<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">.</span>to_s<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">end</span>\\n<span class=\\\"token keyword\\\">end</span>\\n</code></pre>\\n      </div>\\n<p>분명 get<em>more</em>info를 실행시키기 위해선 위에 정의해둔 메서드를 모두 쓸 필요가 있다.\\n생각해보면 굳이 인자를 받을 필요가 없는데..? params는 어디서든지 쓸 수 있으니까.\\n그 점에 착안하여 수정한 코드는 이렇다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ruby\\\"><code class=\\\"language-ruby\\\"><span class=\\\"token keyword\\\">def</span> fetch_params\\n    <span class=\\\"token variable\\\">@params</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">get_more_info</span><span class=\\\"token punctuation\\\">(</span>load_user<span class=\\\"token punctuation\\\">,</span> load_messenger_code<span class=\\\"token punctuation\\\">,</span>\\n                            load_status_code<span class=\\\"token punctuation\\\">,</span> meetup_params<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">end</span>\\n\\n<span class=\\\"token keyword\\\">def</span> load_status\\n    params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:status</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">nil</span><span class=\\\"token operator\\\">?</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">'created'</span> <span class=\\\"token punctuation\\\">:</span> meetup_params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:status</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token keyword\\\">end</span>\\n\\n<span class=\\\"token keyword\\\">def</span> load_status_code\\n    <span class=\\\"token constant\\\">CodeTable</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find_status</span><span class=\\\"token punctuation\\\">(</span>load_status<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>id\\n<span class=\\\"token keyword\\\">end</span>\\n\\n<span class=\\\"token keyword\\\">def</span> load_messenger_code\\n    <span class=\\\"token constant\\\">CodeTable</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find_messenger</span><span class=\\\"token punctuation\\\">(</span>meetup_params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:messenger</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>id\\n<span class=\\\"token keyword\\\">end</span>\\n\\n<span class=\\\"token keyword\\\">def</span> load_user\\n    params <span class=\\\"token operator\\\">=</span> meetup_params\\n    <span class=\\\"token keyword\\\">if</span> load_status <span class=\\\"token operator\\\">==</span> <span class=\\\"token string\\\">'created'</span>\\n    <span class=\\\"token variable\\\">@user</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">User</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span>email<span class=\\\"token punctuation\\\">:</span> params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:email</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token constant\\\">UserMessenger</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span>user_id<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token variable\\\">@user</span><span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span>\\n                            messenger_user_id<span class=\\\"token punctuation\\\">:</span> params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:messenger_user_id</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n                            messenger_code<span class=\\\"token punctuation\\\">:</span> load_messenger_code<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">else</span>\\n    <span class=\\\"token variable\\\">@user</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">User</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find_by</span><span class=\\\"token punctuation\\\">(</span>email<span class=\\\"token punctuation\\\">:</span> params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:email</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">end</span>\\n    <span class=\\\"token variable\\\">@user</span>\\n<span class=\\\"token keyword\\\">end</span>\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">get_more_info</span><span class=\\\"token punctuation\\\">(</span>user<span class=\\\"token punctuation\\\">,</span> messenger_code<span class=\\\"token punctuation\\\">,</span> status_code<span class=\\\"token punctuation\\\">,</span> params<span class=\\\"token punctuation\\\">)</span>\\n    additional_data <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> admin_id<span class=\\\"token punctuation\\\">:</span> user<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span>\\n                        messenger_code<span class=\\\"token punctuation\\\">:</span> messenger_code<span class=\\\"token punctuation\\\">,</span>\\n                        meetup_status<span class=\\\"token punctuation\\\">:</span> status_code <span class=\\\"token punctuation\\\">}</span>\\n\\n    params<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">merge</span><span class=\\\"token punctuation\\\">(</span>additional_data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>reject <span class=\\\"token keyword\\\">do</span> <span class=\\\"token operator\\\">|</span>key<span class=\\\"token operator\\\">|</span>\\n    <span class=\\\"token string\\\">%w(email messenger status messenger_user_id)</span><span class=\\\"token punctuation\\\">.</span>include<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">.</span>to_s<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">end</span>\\n<span class=\\\"token keyword\\\">end</span>\\n</code></pre>\\n      </div>\\n<p>다 수정했더니 이번엔 클래스가 너무 길단다. (104/100줄)\\n줄일 부분 중 가장 크게 눈에 띄는 부분은 if-else문이 여러번 있는 것이다.\\n아예 검증 자체를 처음부터 메서드화 + before_action을 적용하고, 검증을 통과한 녀석만 create, update가 실행되도록 만들려고 하였다.\\n하지만 그 검증 메서드도 점점 몸집이 불어나더니 통과를 못하는 문제가 발생하였고, 야매로 해결한 방법은 helper에다가 넣을 만한 메서드를 옮겨놓고 <code class=\\\"language-text\\\">include MealMeetUpHelper</code>를 삽입하는 것이었다.</p>\",\"frontmatter\":{\"date\":\"2016/07/24\",\"path\":\"/posts/easylunch-api-devlog-1\",\"title\":\"Easylunch Api 서버 제작기 - 1\",\"tags\":[\"Rails\"]}},\"site\":{\"siteMetadata\":{\"siteUrl\":\"https://emaren84.github.io\",\"disqusShortUrl\":\"gatsby-blog-1\"}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---posts-easylunch-api-devlog-1-ddd22d983e4026a1cf13.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2 id=\\\"clone-repository\\\"><a href=\\\"#clone-repository\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Clone repository</h2>\\n<p>금방 하지 못했던 easylunch api 서버 프로젝트를 작성하기 시작했다.\\n프로젝트 생성과 Gem 세팅 등은 이미 되어 있어서 github에 있는 레포를 클론하였고\\nIssue #10 으로 분류되어 있어서 <code class=\\\"language-text\\\">ISS#10</code> 브랜치를 생성하였다.\\n이번에는 Bitbucket에서 작성했던 프로젝트와 다르게 development 브랜치를 두지 않고 이슈 브랜치에서 바로 master로 합치는 방식으로 진행하는가 보다.</p>\\n<h2 id=\\\"모델-작성\\\"><a href=\\\"#%EB%AA%A8%EB%8D%B8-%EC%9E%91%EC%84%B1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>모델 작성</h2>\\n<p>먼저 슬랙에 올라와 있던 모델 도면을 참고하여 모델을 작성하였다.\\n처음엔 별 생각 없이 모델 생성하면서 string이나 integer만 구분하여 각 컬럼을 입력하고 있었다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">rails g model MealLog user_id:integer menu_name:string price:integer meal_time:datetime</code></pre>\\n      </div>\\n<p>이렇게 테이블을 작성하고 나서 모델에서 따로 <code class=\\\"language-text\\\">belongs_to</code> 와 <code class=\\\"language-text\\\">has_many</code> 를 입력해줄 생각이었다.\\n그러다 저번에 다른 튜토리얼에서 우연히 본 references를 이용할 생각이 뒤늦게 들어서 마이그레이션 파일을 변경해 주기로 했다.</p>\\n<p>마이그레이션 시 타입을 references로 지정해주면 model<em>id 생성과 함께 관계 설정을 해주는 코드(`belongs</em>to<code class=\\\"language-text\\\">/</code>has_many`)가 자동으로 삽입된다.\\n다만 이미 마이그레이션 파일이 작성된 뒤였기 때문에(실행은 하지 않음) 다음과 같이 마이그레이션 파일을 변경해주었다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ruby\\\"><code class=\\\"language-ruby\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">CreateMealLogs</span> <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token constant\\\">ActiveRecord</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token constant\\\">Migration</span>\\n  <span class=\\\"token keyword\\\">def</span> change\\n    create_table <span class=\\\"token symbol\\\">:meal_logs</span> <span class=\\\"token keyword\\\">do</span> <span class=\\\"token operator\\\">|</span>t<span class=\\\"token operator\\\">|</span>\\n      t<span class=\\\"token punctuation\\\">.</span>references <span class=\\\"token symbol\\\">:user</span>\\n      t<span class=\\\"token punctuation\\\">.</span>string <span class=\\\"token symbol\\\">:menu_name</span>\\n      t<span class=\\\"token punctuation\\\">.</span>integer <span class=\\\"token symbol\\\">:price</span>\\n      t<span class=\\\"token punctuation\\\">.</span>datetime <span class=\\\"token symbol\\\">:meal_time</span>\\n\\n      t<span class=\\\"token punctuation\\\">.</span>timestamps null<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">false</span>\\n    <span class=\\\"token keyword\\\">end</span>\\n    add_index <span class=\\\"token symbol\\\">:meal_logs</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token symbol\\\">:user_id</span>\\n  <span class=\\\"token keyword\\\">end</span>\\n<span class=\\\"token keyword\\\">end</span>\\n</code></pre>\\n      </div>\\n<p>그리고 직접 관계를 맺어주는 것과 별개로 CodeTable때문에 외부 키를 입력해줄 필요가 있었다.\\n외부 키를 추가할 때는 마이그레이션 파일에 add<em>foreign</em>key 메서드를 사용해야 한다. 이 경우엔 미리 생성된 컬럼을 지정해주고 싶었기 때문에 다음과 같이 삽입해야 했다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">add_foreign_key :meal_meet_ups, :users, column: :admin_id</code></pre>\\n      </div>\\n<p>외부 키를 지정해주는 마이그레이션 파일은 다음과 같이 작성되었다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ruby\\\"><code class=\\\"language-ruby\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">CreateMealMeetUps</span> <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token constant\\\">ActiveRecord</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token constant\\\">Migration</span>\\n  <span class=\\\"token keyword\\\">def</span> change\\n    create_table <span class=\\\"token symbol\\\">:meal_meet_ups</span> <span class=\\\"token keyword\\\">do</span> <span class=\\\"token operator\\\">|</span>t<span class=\\\"token operator\\\">|</span>\\n      t<span class=\\\"token punctuation\\\">.</span>integer <span class=\\\"token symbol\\\">:total_price</span>\\n      t<span class=\\\"token punctuation\\\">.</span>integer <span class=\\\"token symbol\\\">:messenger_code</span>\\n      t<span class=\\\"token punctuation\\\">.</span>string <span class=\\\"token symbol\\\">:messenger_room_id</span>\\n      t<span class=\\\"token punctuation\\\">.</span>integer <span class=\\\"token symbol\\\">:admin_id</span>\\n      t<span class=\\\"token punctuation\\\">.</span>integer <span class=\\\"token symbol\\\">:meetup_status</span>\\n\\n      t<span class=\\\"token punctuation\\\">.</span>timestamps null<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">false</span>\\n    <span class=\\\"token keyword\\\">end</span>\\n    add_foreign_key <span class=\\\"token symbol\\\">:meal_meet_ups</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token symbol\\\">:users</span><span class=\\\"token punctuation\\\">,</span> column<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token symbol\\\">:admin_id</span>\\n    add_foreign_key <span class=\\\"token symbol\\\">:meal_meet_ups</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token symbol\\\">:code_tables</span><span class=\\\"token punctuation\\\">,</span> column<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token symbol\\\">:messenger_code</span>\\n    add_foreign_key <span class=\\\"token symbol\\\">:meal_meet_ups</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token symbol\\\">:code_tables</span><span class=\\\"token punctuation\\\">,</span> column<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token symbol\\\">:meetup_status</span>\\n  <span class=\\\"token keyword\\\">end</span>\\n<span class=\\\"token keyword\\\">end</span>\\n</code></pre>\\n      </div>\\n<p>다음은 MealMeetUp 생성과 변경을 처리하는 api 컨트롤러를 작성할 차례이다.</p>\\n<h2 id=\\\"컨트롤러-작성\\\"><a href=\\\"#%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC-%EC%9E%91%EC%84%B1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>컨트롤러 작성</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">rails g controller MealMeetUp create update</code></pre>\\n      </div>\\n<p>현재 시점에서 첫 번째로 구현하려는 기능은 MealMeetUp api이다. 새 MealMeetUp 생성과 수정을 구현할 예정인데\\njson으로만 데이터를 주고받을 예정이니 <code class=\\\"language-text\\\">routes.rb</code>에 디폴트 포맷을 지정해주기로 했다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\"># routes.rb\\npost &#39;meal_meet_ups&#39;  =&gt; &#39;meal_meet_up#create&#39;, defaults: { format: &#39;json&#39; }\\npatch &#39;meal_meet_ups&#39; =&gt; &#39;meal_meet_up#update&#39;, defaults: { format: &#39;json&#39; }</code></pre>\\n      </div>\\n<p>그 다음에는 <a href=\\\"https://blog.8thlight.com/will-warner/2014/04/05/strong-parameters-in-rails.html\\\">Strong parameter</a>를 지정하기 위해 meetup_params 메서드를 작성했다.</p>\\n<p>입력받을 JSON은 다음과 같으므로 data 아래에 있는 나머지 키들을 전부 받을수 있는 값으로 설정해두었다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"data\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"email\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"abc@example.com\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"messenger\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"slack\\\"</span><span class=\\\"token punctuation\\\">,</span> // 약속된 code\\n        <span class=\\\"token property\\\">\\\"messenger_room_id\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">1459349928</span><span class=\\\"token punctuation\\\">,</span> // optional<span class=\\\"token punctuation\\\">,</span> 값을 얻을 수 없는 특정 메신저의 경우(ex- 카톡<span class=\\\"token punctuation\\\">)</span> api 서버에서 유저의 아이디 정보로 검색\\n        <span class=\\\"token property\\\">\\\"total_price\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">50000</span><span class=\\\"token punctuation\\\">,</span> // optional\\n        <span class=\\\"token property\\\">\\\"status\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"paying\\\"</span> // optional<span class=\\\"token punctuation\\\">,</span> 값이 주어지지 않을 경우 state machine으로 작동\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h2 id=\\\"mealmeetup-create\\\"><a href=\\\"#mealmeetup-create\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>MealMeetUp Create</h2>\\n<p>이 JSON을 가지고(예로 작성된 JSON은 정보 변경시에 받는 것이고 생성 시에는 <code class=\\\"language-text\\\">total_price</code>와 <code class=\\\"language-text\\\">status</code>는 받지 않는다. 대신 <code class=\\\"language-text\\\">messenger_user_id</code>를 받는다) <code class=\\\"language-text\\\">create</code> 메서드가 작동한다면 어떤 과정으로 구동하게 될까 생각해 보았다.</p>\\n<ol>\\n<li>meetup_params를 한번 거쳐서 허가된 매개변수만 받는다.</li>\\n<li>\\n<p>받은 변수들의 유효성을 검사한다</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">email</code>, <code class=\\\"language-text\\\">messenger_user_id</code> 같은 인증 정보가 누락된 경우: 401에러</li>\\n<li><code class=\\\"language-text\\\">messenger</code>, <code class=\\\"language-text\\\">messenger_room_id</code> 같이 방을 생성하기 위한 정보가 충분하지 않아 생성이 불가능할 때: 400에러</li>\\n</ul>\\n</li>\\n<li>\\n<p>유효성을 통과한 경우 먼저 User 객체 생성 + messenger_code 가져오기</p>\\n<ul>\\n<li>messenger 종류로 CodeTable에서 맞는 <code class=\\\"language-text\\\">messenger_code</code> 가져오기 (이 시점에서 seed 파일로 코드테이블을 작성해놓아야 할 필요성을 느꼈다. 더군다나 이런식으로 찾을거면 코드테이블을 작성하는 의미가 있나?)</li>\\n<li>email 주소로 새로운 유저 생성.</li>\\n</ul>\\n</li>\\n<li>\\n<p>MealMeetUp 생성</p>\\n<ul>\\n<li>앞선 과정에서 가져온 <code class=\\\"language-text\\\">messenger_code</code></li>\\n<li><code class=\\\"language-text\\\">messenger_room_id</code></li>\\n<li>앞서 생성된 user의 id를 <code class=\\\"language-text\\\">admin_id</code>로 지정</li>\\n<li>status는 null로 두고, null인 경우는 최초 생성인 것으로 간주하도록 하려고 했으나, 아무래도 \\\"​created\\\"라는 상태를 지정해 두는 것이 나아 보인다.</li>\\n</ul>\\n</li>\\n</ol>\\n<p>CodeTable을 작성하면서 한 가지 실수한 점이 있는데, 컬럼명에 'type'이라는 이름을 쓰면 레일즈에 기본적으로 정의되어있는 type과 충돌이 난다. 그래서 code_type으로 컬럼명을 변경하였다.</p>\\n<p>각각 코드가 무엇을 의미하는지는 code_table.rb에 주석으로 달기로 하였다.</p>\\n<p>한창 날코딩으로 작업을 하고, 얼렁뚱땅 create메서드를 작동시키는 것 까지는 성공했는데 돌이켜보니 DB 관계 설정을 하나도 해두지 않았다.\\n생성과 구상까지만 하고 몇일을 보내버려서 그런지 생각보다 머리에 잘 들어오지 않아 애먹고 있다.</p>\\n<p>매번 단순히 <code class=\\\"language-text\\\">has_many</code>, <code class=\\\"language-text\\\">belongs_to</code>정도만 남발하다가 본격적으로 직접 외부키로 관계를 맺어주려니 어렵게 느껴졌다. 이리저리 소스를 찾아서 구현해본 결과 이런 느낌으로 나온다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ruby\\\"><code class=\\\"language-ruby\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">MealMeetUp</span> <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token constant\\\">ActiveRecord</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token constant\\\">Base</span>\\n  has_many <span class=\\\"token symbol\\\">:meal_meet_up_logs</span>\\n  has_many <span class=\\\"token symbol\\\">:meal_meet_up_tasks</span>\\n  belongs_to <span class=\\\"token symbol\\\">:admin</span><span class=\\\"token punctuation\\\">,</span> class_name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'User'</span><span class=\\\"token punctuation\\\">,</span> foreign_key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'admin_id'</span>\\n  belongs_to <span class=\\\"token symbol\\\">:messenger</span><span class=\\\"token punctuation\\\">,</span> class_name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'CodeTable'</span><span class=\\\"token punctuation\\\">,</span> foreign_key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'messenger_code'</span>\\n<span class=\\\"token keyword\\\">end</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">User</span> <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token constant\\\">ActiveRecord</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token constant\\\">Base</span>\\n  has_many <span class=\\\"token symbol\\\">:meal_meet_ups</span><span class=\\\"token punctuation\\\">,</span> foreign_key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'admin_id'</span>\\n  has_many <span class=\\\"token symbol\\\">:meal_logs</span>\\n  has_many <span class=\\\"token symbol\\\">:user_messengers</span>\\n<span class=\\\"token keyword\\\">end</span>\\n</code></pre>\\n      </div>\\n<p>어느 클래스에 있는 값을 가져올지 <code class=\\\"language-text\\\">class_name</code>으로 지정해주고, 실제 어떤 메서드를 입력해서 가져올지(<code class=\\\"language-text\\\">:admin</code>), 어떤 외부키를 지정해 두었는지 등으로 설정할 수 있다.</p>\\n<p><code class=\\\"language-text\\\">create</code>메서드가 작동 자체는 잘 하는 것 같은데 루보캅에서 메서드가 너무 길다고 하니까 조금 아쉽게 느껴진다. 더 줄일 부분이 분명히 있는데 어느 부분을 손대야할지 잘 감이 안잡히는 느낌이 든다. 기준이 10줄인데 14줄로 작성되어 있으니..</p>\\n<p>인증 정보의 유효성 고려하다보니 깜빡한 것이, 이메일 유효성을 고려하지 않았다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">VALID_EMAIL_ADDRESS = /\\\\A[\\\\w+\\\\-.]+@[a-z\\\\d\\\\-.]+\\\\.[a-z]+\\\\z/i</code></pre>\\n      </div>\\n<p>M.Hartl의 튜토리얼에서 가져온 이 정규표현식으로 메서드를 만들어서 검증하기로 했다.</p>\\n<h2 id=\\\"mealmeetup-update\\\"><a href=\\\"#mealmeetup-update\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>MealMeetUp Update</h2>\\n<p>업데이트는 두가지 속성이 더 추가되는데, <code class=\\\"language-text\\\">total_price</code>와 <code class=\\\"language-text\\\">status</code>이다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"data\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"email\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"abc@example.com\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"messenger\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"slack\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"messenger_room_id\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">1459349928</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"total_price\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">50000</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"status\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"paying\\\"</span> // 현재까지 완료된 최종 상태\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>설마 했던 문제지만, 이번에도 create를 만들면서 별달리 다음 문제에 대해 고려를 안하다 보니까 리턴용 JSON 생성이 곤란하게 되었다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ruby\\\"><code class=\\\"language-ruby\\\"><span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">meal_meet_up_json</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">{</span> data<span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token punctuation\\\">{</span> email<span class=\\\"token punctuation\\\">:</span> data<span class=\\\"token punctuation\\\">.</span>admin<span class=\\\"token punctuation\\\">.</span>email<span class=\\\"token punctuation\\\">,</span>\\n        messenger<span class=\\\"token punctuation\\\">:</span> data<span class=\\\"token punctuation\\\">.</span>messenger<span class=\\\"token punctuation\\\">,</span>\\n        messenger_room_id<span class=\\\"token punctuation\\\">:</span> data<span class=\\\"token punctuation\\\">.</span>messenger_room_id <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">end</span>\\n</code></pre>\\n      </div>\\n<p>그래서 생각하건데 아예 모든 값이 다 들어가도록 json을 만들고,  create메서드에서 리턴할때만 특정 키를 뺀 채로 만들면 될 거라는 생각이 든다.</p>\\n<p>공통적입 부분을 생각해보니, MealMeetUp 객체에 저장을 하기위해 추가적으로 들어가는 정보들을 조회하는 부분이 크게 중복된다. 그래서 이 기능도 나누어서 작성하였다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ruby\\\"><code class=\\\"language-ruby\\\"><span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">get_more_info</span><span class=\\\"token punctuation\\\">(</span>params<span class=\\\"token punctuation\\\">)</span>\\n    status <span class=\\\"token operator\\\">=</span> params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:status</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>empty<span class=\\\"token operator\\\">?</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">'created'</span> <span class=\\\"token punctuation\\\">:</span> params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:status</span><span class=\\\"token punctuation\\\">]</span>\\n    messenger_code <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">CodeTable</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find_messenger</span><span class=\\\"token punctuation\\\">(</span>params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:messenger</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>id\\n    status_code <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">CodeTable</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find_status</span><span class=\\\"token punctuation\\\">(</span>status<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>id\\n\\n    user <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">if</span> status <span class=\\\"token operator\\\">==</span> <span class=\\\"token string\\\">'created'</span>\\n            <span class=\\\"token constant\\\">User</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span>email<span class=\\\"token punctuation\\\">:</span> params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:email</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token keyword\\\">else</span>\\n            <span class=\\\"token constant\\\">User</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find_by</span><span class=\\\"token punctuation\\\">(</span>email<span class=\\\"token punctuation\\\">:</span> params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:email</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token keyword\\\">end</span>\\n\\n    additional_data <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> admin_id<span class=\\\"token punctuation\\\">:</span> user<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span> messenger_code<span class=\\\"token punctuation\\\">:</span> messenger_code<span class=\\\"token punctuation\\\">,</span> status_code<span class=\\\"token punctuation\\\">:</span> status_code <span class=\\\"token punctuation\\\">}</span>\\n\\n    params<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">merge</span><span class=\\\"token punctuation\\\">(</span>additional_data<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">end</span>\\n</code></pre>\\n      </div>\\n<p>막상 이것도 더 쪼갤 수 있을 테지만.. status<em>code, messenger</em>code, admin_id 삽입까지 처리하였다.\\n마지막 줄에 최종적으로 원하는 데이터를 출력하는 부분이 애매한데, MeetUp 객체 생성/수정에 필요 없는 정보들이 너무 많았다. 그래서 조금 수정을 가했다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">params.merge(additional_data).reject { |key| [&#39;email&#39;, &#39;messenger&#39;, &#39;status&#39;, &#39;messenger_user_id&#39;].include?(key) }</code></pre>\\n      </div>\\n<p>거의 다 된거 같은게 갈수록 태산처럼 보인다. 이번에는 messenger<em>user</em>id가 UserMessenger 모델에 들어가야하는 값이라는걸 깨달았다. 당장 어디다 넣어야 할지도 모르겠는데.. 일단 <code class=\\\"language-text\\\">get_more_info</code> 메서드를 조금 수정하여 처음 생성하는 MealMeetUp일 경우 새로운 UserMessenger 객체를 생성하는 것 까지 진행했다.</p>\\n<p>지금까지 작업하여 돌아가기는 하지만 영 못마땅한 부분이 많다. 특히 반복적인 부분과 매끄럽게 보이지 않는 부분들이 너무 많은데, 본격적으로 수정을 하면 어디부터 손을 대야할지 해봐야 알 것이다. (루보캅 테스트 통과 못한 부분이 무려 22개)</p>\\n<p>루보캅에서 주로 걸리는 문제는 ABC(Assignment Branch Condition) 사이즈가 너무 크다는 것이다. 한번에 이해는 하기 힘들었지만 변수를 많이 선언하고, 조건을 많이 걸고, 얽힌 메서드가 많을 수록 점수가 올라가는 기분이 든다.</p>\\n<p>당장 위에 작성한 <code class=\\\"language-text\\\">get_more_info</code> 메서드만 해도 기준을 1.5배 초과하고 있다. 당장 저 메서드를 수정하려면 어떻게 해야할까? 저 메서드가 어떤 기능을 수행하는지 나누어 보자.</p>\\n<ul>\\n<li>status 패러미터를 가져와서 패러미터가 없으면 'created'를 부여한다.</li>\\n<li>messenger_code를 가져온다.</li>\\n<li>status_code를 가져온다.</li>\\n<li>status가 'created'이면 (즉 처음 MealMeetUp이 생성되는거면) 새로운 유저와 유저메신저 객체를 생성한다.</li>\\n<li>생성된 유저의 Id와 messenger<em>code, status</em>code를 새로운 해시(addtional_data)로 만든다.</li>\\n<li>기존의 패러미터에 addtional_data를 합친다.</li>\\n</ul>\\n<p>기능별로 하나하나 나눌 순 있다. 점점 메서드의 산이 되어가는 기분이지만..\\n먼저 걸리는 점은 새로운 유저 생성, 그다음은 스테이터스 패러미터, 마지막은 추가 해시 생성이다.\\n새로운 유저 생성 부분부터 분리해보자.</p>\\n<p>무작정 분리한건 좋은데 이 메서드들을 어떻게 합쳐야 할지 감이 오지 않는다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ruby\\\"><code class=\\\"language-ruby\\\"><span class=\\\"token keyword\\\">def</span> fetch_params\\n    <span class=\\\"token variable\\\">@params</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">get_more_info</span><span class=\\\"token punctuation\\\">(</span>meetup_params<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">end</span>\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">load_status</span><span class=\\\"token punctuation\\\">(</span>status<span class=\\\"token punctuation\\\">)</span>\\n    status<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">nil</span><span class=\\\"token operator\\\">?</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">'created'</span> <span class=\\\"token punctuation\\\">:</span> status\\n<span class=\\\"token keyword\\\">end</span>\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">load_status_code</span><span class=\\\"token punctuation\\\">(</span>status<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token variable\\\">@status_code</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">CodeTable</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find_status</span><span class=\\\"token punctuation\\\">(</span>status<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>id\\n<span class=\\\"token keyword\\\">end</span>\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">load_messenger_code</span><span class=\\\"token punctuation\\\">(</span>messenger<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token variable\\\">@messenger_code</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">CodeTable</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find_messenger</span><span class=\\\"token punctuation\\\">(</span>messenger<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>id\\n<span class=\\\"token keyword\\\">end</span>\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">load_user</span><span class=\\\"token punctuation\\\">(</span>status<span class=\\\"token punctuation\\\">,</span> params<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">if</span> status <span class=\\\"token operator\\\">==</span> <span class=\\\"token string\\\">'created'</span>\\n    <span class=\\\"token variable\\\">@user</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">User</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span>email<span class=\\\"token punctuation\\\">:</span> params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:email</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token constant\\\">UserMessenger</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span>user_id<span class=\\\"token punctuation\\\">:</span> user<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span>\\n                            messenger_user_id<span class=\\\"token punctuation\\\">:</span> params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:messenger_user_id</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n                            messenger_code<span class=\\\"token punctuation\\\">:</span> messenger_code<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">else</span>\\n    <span class=\\\"token variable\\\">@user</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">User</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find_by</span><span class=\\\"token punctuation\\\">(</span>email<span class=\\\"token punctuation\\\">:</span> params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:email</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">end</span>\\n<span class=\\\"token keyword\\\">end</span>\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">get_more_info</span><span class=\\\"token punctuation\\\">(</span>user<span class=\\\"token punctuation\\\">,</span> messenger_code<span class=\\\"token punctuation\\\">,</span> status_code<span class=\\\"token punctuation\\\">,</span> params<span class=\\\"token punctuation\\\">)</span>\\n    additional_data <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> admin_id<span class=\\\"token punctuation\\\">:</span> user<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span>\\n                        messenger_code<span class=\\\"token punctuation\\\">:</span> messenger_code<span class=\\\"token punctuation\\\">,</span>\\n                        meetup_status<span class=\\\"token punctuation\\\">:</span> status_code <span class=\\\"token punctuation\\\">}</span>\\n\\n    params<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">merge</span><span class=\\\"token punctuation\\\">(</span>additional_data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>reject <span class=\\\"token keyword\\\">do</span> <span class=\\\"token operator\\\">|</span>key<span class=\\\"token operator\\\">|</span>\\n    <span class=\\\"token string\\\">%w(email messenger status messenger_user_id)</span><span class=\\\"token punctuation\\\">.</span>include<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">.</span>to_s<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">end</span>\\n<span class=\\\"token keyword\\\">end</span>\\n</code></pre>\\n      </div>\\n<p>분명 get<em>more</em>info를 실행시키기 위해선 위에 정의해둔 메서드를 모두 쓸 필요가 있다.\\n생각해보면 굳이 인자를 받을 필요가 없는데..? params는 어디서든지 쓸 수 있으니까.\\n그 점에 착안하여 수정한 코드는 이렇다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ruby\\\"><code class=\\\"language-ruby\\\"><span class=\\\"token keyword\\\">def</span> fetch_params\\n    <span class=\\\"token variable\\\">@params</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">get_more_info</span><span class=\\\"token punctuation\\\">(</span>load_user<span class=\\\"token punctuation\\\">,</span> load_messenger_code<span class=\\\"token punctuation\\\">,</span>\\n                            load_status_code<span class=\\\"token punctuation\\\">,</span> meetup_params<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">end</span>\\n\\n<span class=\\\"token keyword\\\">def</span> load_status\\n    params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:status</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">nil</span><span class=\\\"token operator\\\">?</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">'created'</span> <span class=\\\"token punctuation\\\">:</span> meetup_params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:status</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token keyword\\\">end</span>\\n\\n<span class=\\\"token keyword\\\">def</span> load_status_code\\n    <span class=\\\"token constant\\\">CodeTable</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find_status</span><span class=\\\"token punctuation\\\">(</span>load_status<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>id\\n<span class=\\\"token keyword\\\">end</span>\\n\\n<span class=\\\"token keyword\\\">def</span> load_messenger_code\\n    <span class=\\\"token constant\\\">CodeTable</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find_messenger</span><span class=\\\"token punctuation\\\">(</span>meetup_params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:messenger</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>id\\n<span class=\\\"token keyword\\\">end</span>\\n\\n<span class=\\\"token keyword\\\">def</span> load_user\\n    params <span class=\\\"token operator\\\">=</span> meetup_params\\n    <span class=\\\"token keyword\\\">if</span> load_status <span class=\\\"token operator\\\">==</span> <span class=\\\"token string\\\">'created'</span>\\n    <span class=\\\"token variable\\\">@user</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">User</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span>email<span class=\\\"token punctuation\\\">:</span> params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:email</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token constant\\\">UserMessenger</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span>user_id<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token variable\\\">@user</span><span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span>\\n                            messenger_user_id<span class=\\\"token punctuation\\\">:</span> params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:messenger_user_id</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n                            messenger_code<span class=\\\"token punctuation\\\">:</span> load_messenger_code<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">else</span>\\n    <span class=\\\"token variable\\\">@user</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">User</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find_by</span><span class=\\\"token punctuation\\\">(</span>email<span class=\\\"token punctuation\\\">:</span> params<span class=\\\"token punctuation\\\">[</span><span class=\\\"token symbol\\\">:email</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">end</span>\\n    <span class=\\\"token variable\\\">@user</span>\\n<span class=\\\"token keyword\\\">end</span>\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">get_more_info</span><span class=\\\"token punctuation\\\">(</span>user<span class=\\\"token punctuation\\\">,</span> messenger_code<span class=\\\"token punctuation\\\">,</span> status_code<span class=\\\"token punctuation\\\">,</span> params<span class=\\\"token punctuation\\\">)</span>\\n    additional_data <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> admin_id<span class=\\\"token punctuation\\\">:</span> user<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span>\\n                        messenger_code<span class=\\\"token punctuation\\\">:</span> messenger_code<span class=\\\"token punctuation\\\">,</span>\\n                        meetup_status<span class=\\\"token punctuation\\\">:</span> status_code <span class=\\\"token punctuation\\\">}</span>\\n\\n    params<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">merge</span><span class=\\\"token punctuation\\\">(</span>additional_data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>reject <span class=\\\"token keyword\\\">do</span> <span class=\\\"token operator\\\">|</span>key<span class=\\\"token operator\\\">|</span>\\n    <span class=\\\"token string\\\">%w(email messenger status messenger_user_id)</span><span class=\\\"token punctuation\\\">.</span>include<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">.</span>to_s<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">end</span>\\n<span class=\\\"token keyword\\\">end</span>\\n</code></pre>\\n      </div>\\n<p>다 수정했더니 이번엔 클래스가 너무 길단다. (104/100줄)\\n줄일 부분 중 가장 크게 눈에 띄는 부분은 if-else문이 여러번 있는 것이다.\\n아예 검증 자체를 처음부터 메서드화 + before_action을 적용하고, 검증을 통과한 녀석만 create, update가 실행되도록 만들려고 하였다.\\n하지만 그 검증 메서드도 점점 몸집이 불어나더니 통과를 못하는 문제가 발생하였고, 야매로 해결한 방법은 helper에다가 넣을 만한 메서드를 옮겨놓고 <code class=\\\"language-text\\\">include MealMeetUpHelper</code>를 삽입하는 것이었다.</p>\",\"frontmatter\":{\"date\":\"2016/07/24\",\"path\":\"/posts/easylunch-api-devlog-1\",\"title\":\"Easylunch Api 서버 제작기 - 1\",\"tags\":[\"Rails\"]}},\"site\":{\"siteMetadata\":{\"siteUrl\":\"https://emaren84.github.io\",\"disqusShortUrl\":\"gatsby-blog-1\"}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/posts-easylunch-api-devlog-1.json\n// module id = 423\n// module chunks = 212315477619989"],"sourceRoot":""}